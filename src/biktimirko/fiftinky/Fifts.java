package biktimirko.fiftinky;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Fifts {

	static	JLabel Score;
	static int ScoreInt = 0;
	static 	JButton ButStart;
	
	static 	JButton But1;
	static 	JButton But2;
	static 	JButton But3;
	static 	JButton But4;
	static 	JButton But5;
	static 	JButton But6;
	static 	JButton But7;
	static 	JButton But8;
	static 	JButton But9;
	static 	JButton But10;
	static 	JButton But11;
	static 	JButton But12;
	static 	JButton But13;
	static 	JButton But14;
	static 	JButton But15;
	static 	JButton ButZero;
	
	//конфигурация нашего графического интерфейса
	public static void createGUI()
    {
		
		//создаем окно с заголовком
		JFrame Window = new JFrame("Пятнашки");		//Window - имя экземпляра класса JFrame, Пятнашки - текст в заголовке окна
        
		//добавляем функцию выхода из программы по щелчку на закрытие окна
		Window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
		//место куда будем напихивать интерфейс
		JPanel contents = new JPanel();
		
		//создаем экземпляр  способа расположения элементов и задаем его в интерфейс
		BorderLayout container = new BorderLayout();	//расположение элементов по принципу север, юг, запад, восток, центр
		contents.setLayout(container);					//запихиваем его в нашу панель
		
		
		//создаем экземпляр  способа расположения элементов и задаем его в наше меню
        GridLayout Setka1na2 = new GridLayout(1,2);		//расположение элементов по принципу сетка 1*2, одна строка 2 колонки
		JPanel Мenu = new JPanel();						//создаем контейнер, где будет храниться кнопки старт и панель с ходами
		Мenu.setLayout(Setka1na2);						//Запихиваем наше расположение элементов в контейнер
		
		
		Score = new JLabel("Пятнашки");       			//создаем панель вывода не редактируемого текста, с текстом "пятнашки", тут будет выводиться количество ходов и надпись о выигрыше
        ButStart = new JButton("СТАРТ");				//кнопка старт, будет перемешивать значение кубиков
		Мenu.add(ButStart);								//добавляем ее в контейнер, добавляем ее первой, чтобы она была сверху слева        
		Мenu.add(Score);								//добавляем ее в контейнер, добавляем ее второй, чтобы она была сверху справа
		ButStart.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		random();								//запускаем функцию рандомизатора
        		Score.setText("GO!");					//пишем мотивирующую надпись
        		ScoreInt=0;								//сбрасываем счетчик
			}

			
        }
        );
		
		
		
        
        //создаем экземпляр  способа расположения элементов и задаем его в наше поле игры
        GridLayout Setka5na4 = new GridLayout(4,4);		//расположение элементов по принципу  сетка 4*4, 4 строки 4 колонки, элементы входят в сетку по порядку: 
        												//сначала заполняется колонки в первой строке, потом переходят на вторую строку и так далее
		JPanel Pole = new JPanel();						//создаем контейнер, где будут храниться кнопки поля игры
		Pole.setLayout(Setka5na4);						//Запихиваем наше расположение элементов в контейнер
		               
        But1 = new JButton("1");						//кнопка 1
        Pole.add(But1);									//запихиваем ее первой на место 1*1
        But1.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub
				
        		if (But2.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But2.setText(But1.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But1.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But5.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But5.setText(But1.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But1.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But2 = new JButton("2");						//кнопка 2
        Pole.add(But2);									//запихиваем ее на место 1*2
        But2.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub
				
        		if (But1.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But1.setText(But2.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But2.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But3.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But3.setText(But2.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But2.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But6.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But6.setText(But2.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But2.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But3 = new JButton("3");						//кнопка 3
        Pole.add(But3);									//запихиваем ее на место 1*3
        But3.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But2.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But2.setText(But3.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But3.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But4.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But4.setText(But3.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But3.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But7.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But7.setText(But3.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But3.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );    
        
        But4 = new JButton("4");						//кнопка 4
        Pole.add(But4);									//запихиваем ее на место 1*4
        But4.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub
        		if (But3.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But3.setText(But4.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But4.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But8.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But8.setText(But4.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But4.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );        
        
        But5 = new JButton("5");						//кнопка 5
        Pole.add(But5);									//запихиваем ее на место 2*1
        But5.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But1.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But1.setText(But5.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But5.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But6.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But6.setText(But5.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But5.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But9.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But9.setText(But5.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But5.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But6 = new JButton("6");						//кнопка 6
        Pole.add(But6);									//запихиваем ее на место 2*2
        But6.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But2.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But2.setText(But6.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But6.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But5.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But5.setText(But6.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But6.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But7.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But7.setText(But6.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But6.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But10.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But10.setText(But6.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But6.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But7 = new JButton("7");						//кнопка 7
        Pole.add(But7);									//запихиваем ее на место 2*3
        But7.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But3.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But3.setText(But7.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But7.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But6.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But6.setText(But7.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But7.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But8.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But8.setText(But7.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But7.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But11.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But11.setText(But7.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But7.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But8 = new JButton("8");						//кнопка 8
        Pole.add(But8);									//запихиваем ее на место 2*4
        But8.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But4.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But4.setText(But8.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But8.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But7.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But7.setText(But8.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But8.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But12.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But12.setText(But8.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But8.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But9 = new JButton("9");						//кнопка 9
        Pole.add(But9);									//запихиваем ее на место 3*1
        But9.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But5.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But5.setText(But9.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But9.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But10.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But10.setText(But9.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But9.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But13.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But13.setText(But9.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But9.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But10 = new JButton("10");						//кнопка 10
        Pole.add(But10);								//запихиваем ее на место 3*2
        But10.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But6.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But6.setText(But10.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But10.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But9.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But9.setText(But10.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But10.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But11.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But11.setText(But10.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But10.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But14.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But14.setText(But10.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But10.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );        

        But11 = new JButton("11");						//кнопка 11
        Pole.add(But11);								//запихиваем ее на место 3*3
        But11.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But7.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But7.setText(But11.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But11.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But10.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But10.setText(But11.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But11.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But12.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But12.setText(But11.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But11.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But15.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But15.setText(But11.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But11.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But12 = new JButton("12");						//кнопка 12
        Pole.add(But12);								//запихиваем ее на место 3*4
        But12.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But8.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But8.setText(But12.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But12.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But11.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But11.setText(But12.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But12.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(ButZero.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			ButZero.setText(But12.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But12.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But13 = new JButton("13");						//кнопка 13
        Pole.add(But13);								//запихиваем ее на место 4*1
        But13.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But9.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But9.setText(But13.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But13.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But14.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But14.setText(But13.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But13.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But14 = new JButton("14");						//кнопка 14
        Pole.add(But14);								//запихиваем ее на место 4*2
        But14.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But10.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But10.setText(But14.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But14.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But13.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But13.setText(But14.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But14.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But15.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But15.setText(But14.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But14.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        But15 = new JButton("15");						//кнопка 15
        Pole.add(But15);								//запихиваем ее на место 4*3
        But15.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But11.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But11.setText(But15.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But15.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But14.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But14.setText(But15.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But15.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(ButZero.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			ButZero.setText(But15.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			But15.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
        ButZero = new JButton(" ");						//кнопка с пустым полем
        Pole.add(ButZero);								//запихиваем ее на место 4*4
        ButZero.addActionListener(new ActionListener() {   //создаем действие на кнопку
			
        	@Override
			public void actionPerformed(ActionEvent e) {//создаем событие по нажатию кнопки
				// TODO Auto-generated method stub

        		if (But12.getText().equals(" ")) {		//проверяем соседнюю кнопку на наличие пустого поля
        			But12.setText(ButZero.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			ButZero.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}else if(But15.getText().equals(" ")) {	//проверяем соседнюю кнопку на наличие пустого поля
        			But15.setText(ButZero.getText());		//вставляем вместо пустого поля значение из нашей кнопки
        			ButZero.setText(" ");					//ставим в нашу кнопку значение пустого поля
        		}
        		
				Win();									//проверка на победу, с повышением счетчика ходов
			}

			
        }
        );
        
               
        //добавляем наши контейнеры для меню и игрового поля в общий контейнер
        contents.add(Pole,BorderLayout.CENTER);			//добавляем игровое поле на центр
        contents.add(Мenu,BorderLayout.NORTH);			//добавляем меню в верхнюю часть (она же север)
        
        //добавляем contents на наше окно
        Window.getContentPane().add(contents);
        
        //задаем размер нашего окна
        Window.setPreferredSize(new Dimension(400, 400));
        
        //подгоняет размер окна под наши заданные параметры, без него окно будет размером пиксель на пиксель
        Window.pack();


        //выставляет наше окно по центру экрана
        Window.setLocationRelativeTo(null);
        
        //параметр задающий видимость нашего окна
        Window.setVisible(true);          
   }
	
		//проверка после каждого хода, а не встали ли на свои места значения на кнопках
	public static void Win() {
		
		if ( But1.getText().equals("1")&&			//проверка кнопки 1
				But2.getText().equals("2")&&		//проверка кнопки 2
				But3.getText().equals("3")&&		//проверка кнопки 3
				But4.getText().equals("4")&&		//проверка кнопки 4
				But5.getText().equals("5")&&		//проверка кнопки 5
				But6.getText().equals("6")&&		//проверка кнопки 6
				But7.getText().equals("7")&&		//проверка кнопки 7
				But8.getText().equals("8")&&		//проверка кнопки 8
				But9.getText().equals("9")&&		//проверка кнопки 9
				But10.getText().equals("10")&&		//проверка кнопки 10
				But11.getText().equals("11")&&		//проверка кнопки 11
				But12.getText().equals("12")&&		//проверка кнопки 12
				But13.getText().equals("13")&&		//проверка кнопки 13
				But14.getText().equals("14")&&		//проверка кнопки 14
				But15.getText().equals("15")&&		//проверка кнопки 15
				ButZero.getText().equals(" ")){		//проверка пустой кнопки
			Score.setText("congratulations you score: "+ScoreInt);		//если все значения на своих кнопках, то выводим сообщение о выигрыше
						
		}else {															//если не все на своих местах 
			ScoreInt++;								//добавляем 1 к счетчику ходов
			Score.setText("move: "+ScoreInt);		//выводим номер ходы
		}
				
	}
	
	//функция перемешивания значений на кнопках
	public static void random() {
		
		int chet=0;												//счетчик четности, который понадобится для понимания решаемая ли комбинация или нет
		int[] chek = new int[15];								//создаем массив из 15 чисел
		String [] spin = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15"};	//создаем массив значений на строках
		List<String> list = new ArrayList<>(Arrays.asList(spin));	//засовываем массив значений кнопок в список
		int x1=(int)(Math.random()*list.size());					//создам случайное число от 1 до 15 (так как сейчас в списке 15 значений)
		But1.setText(list.get(x1));									//вставляем это число в первую кнопку
		chek[0]=Integer.parseInt(list.get(x1));						//вставляем в подготовленный массив наше первое число
		list.remove(x1);											//удаляем из списка значение с соответствующим номером
		/*
			тоесть мы получили случайное число от 1 до 15, присвоили это число в первую кнопку.
			убрали его из списков
			на следующем прогоне мы получим число от 1до 14, но если это число будет больше предыдущего то его значение не будет совпадать с порядковым номером
			
			"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15"
			число x1 к примеру было 7
			
			нав торой итерации список будет выглядеть так
			"1","2","3","4","5","6","8","9","10","11","12","13","14","15"
			
			число x2 к примеру было 12
			значение, которое будет присвоено в кнопку будет при этом "13", так как на 12 позиции стоит "13"
			В подготовленный массив вставили это же число, чтобы потом рассчитать возможность решения комбинации	
			на второй итерации на примере проверочный массив будет
			7, 13 					
		*/
		int x2=(int)(Math.random()*list.size());					//создам случайное число от 1 до 14 (так как сейчас в списке 14 значений)
		But2.setText(list.get(x2));									//вставляем это число из списка под номером x2 во вторую кнопку
		chek[1]=Integer.parseInt(list.get(x2));						//вставляем в подготовленный массив  наше второе число
		list.remove(x2);											//удаляем из списка значение с соответствующим номером
		int x3=(int)(Math.random()*list.size());					//создам случайное число от 1 до 13 (так как сейчас в списке 13 значений)
		But3.setText(list.get(x3));									//вставляем это число из списка под номером x3 во третью кнопку
		chek[2]=Integer.parseInt(list.get(x3));						//вставляем в подготовленный массив  наше третье число
		list.remove(x3);											//удаляем из списка значение с соответствующим номером
		int x4=(int)(Math.random()*list.size());					//создам случайное число от 1 до 12 (так как сейчас в списке 12 значений)
		But4.setText(list.get(x4));									//вставляем это число из списка под номером x4 во четвертую кнопку
		chek[3]=Integer.parseInt(list.get(x4));						//вставляем в подготовленный массив  наше четвертое число
		list.remove(x4);											//удаляем из списка значение с соответствующим номером
		int x5=(int)(Math.random()*list.size());					//создам случайное число от 1 до 11 (так как сейчас в списке 11 значений)
		But5.setText(list.get(x5));									//вставляем это число из списка под номером x5 во пятую кнопку
		chek[4]=Integer.parseInt(list.get(x5));						//вставляем в подготовленный массив  наше пятое число
		list.remove(x5);											//удаляем из списка значение с соответствующим номером
		int x6=(int)(Math.random()*list.size());					//создам случайное число от 1 до 10 (так как сейчас в списке 10 значений)
		But6.setText(list.get(x6));									//вставляем это число из списка под номером x6 во шестую кнопку
		chek[5]=Integer.parseInt(list.get(x6));						//вставляем в подготовленный массив  наше шестое число
		list.remove(x6);											//удаляем из списка значение с соответствующим номером
		int x7=(int)(Math.random()*list.size());					//создам случайное число от 1 до 9 (так как сейчас в списке 9 значений)
		But7.setText(list.get(x7));									//вставляем это число из списка под номером x7 в седьмую кнопку
		chek[6]=Integer.parseInt(list.get(x7));						//вставляем в подготовленный массив  наше седьмое число
		list.remove(x7);											//удаляем из списка значение с соответствующим номером
		int x8=(int)(Math.random()*list.size());					//создам случайное число от 1 до 8 (так как сейчас в списке 8 значений)
		But8.setText(list.get(x8));									//вставляем это число из списка под номером x8 в восьмую кнопку
		chek[7]=Integer.parseInt(list.get(x8));						//вставляем в подготовленный массив  наше восьмое число
		list.remove(x8);											//удаляем из списка значение с соответствующим номером
		int x9=(int)(Math.random()*list.size());					//создам случайное число от 1 до 7 (так как сейчас в списке 7 значений)
		But9.setText(list.get(x9));									//вставляем это число из списка под номером x9 в девятую кнопку
		chek[8]=Integer.parseInt(list.get(x9));						//вставляем в подготовленный массив  наше девятое число
		list.remove(x9);											//удаляем из списка значение с соответствующим номером
		int x10=(int)(Math.random()*list.size());					//создам случайное число от 1 до 6 (так как сейчас в списке 6 значений)
		But10.setText(list.get(x10));								//вставляем это число из списка под номером x10 в десятую кнопку
		chek[9]=Integer.parseInt(list.get(x10));					//вставляем в подготовленный массив  наше десятое число
		list.remove(x10);											//удаляем из списка значение с соответствующим номером
		int x11=(int)(Math.random()*list.size());					//создам случайное число от 1 до 5 (так как сейчас в списке 5 значений)
		But11.setText(list.get(x11));								//вставляем это число из списка под номером x11 в одинадцатую кнопку
		chek[10]=Integer.parseInt(list.get(x11));					//вставляем в подготовленный массив  наше одинацатое число
		list.remove(x11);											//удаляем из списка значение с соответствующим номером
		int x12=(int)(Math.random()*list.size());					//создам случайное число от 1 до 4 (так как сейчас в списке 4 значений)
		But12.setText(list.get(x12));								//вставляем это число из списка под номером x12 в двенадцатую кнопку
		chek[11]=Integer.parseInt(list.get(x12));					//вставляем в подготовленный массив  наше двенадцатое число
		list.remove(x12);											//удаляем из списка значение с соответствующим номером
		int x13=(int)(Math.random()*list.size());					//создам случайное число от 1 до 3 (так как сейчас в списке 3 значений)
		But13.setText(list.get(x13));								//вставляем это число из списка под номером x13 в тринадцатую кнопку
		chek[12]=Integer.parseInt(list.get(x13));					//вставляем в подготовленный массив  наше тринадцатое число
		list.remove(x13);											//удаляем из списка значение с соответствующим номером
		int x14=(int)(Math.random()*list.size());					//создам случайное число от 1 до 2 (так как сейчас в списке 2 значений)
		But14.setText(list.get(x14));								//вставляем это число из списка под номером x14 в четырнадцатую кнопку
		chek[13]=Integer.parseInt(list.get(x14));					//вставляем в подготовленный массив  наше четырнадцатое число
		list.remove(x14);											//удаляем из списка значение с соответствующим номером
		int x15=(int)(Math.random()*list.size());					//создам случайное число от 1 до 1 (так как сейчас в списке 1 значений)
		But15.setText(list.get(x15));								//вставляем это число из списка под номером x15 в пятнадцатую кнопку
		chek[14]=Integer.parseInt(list.get(x15));					//вставляем в подготовленный массив  наше пятнадцатое  число
		list.remove(x15);											//удаляем из списка значение с соответствующим номером
		
					
		ButZero.setText(" ");										//в шестнадцатую  кнопку всегда ставим пустое место
		
		//расчет возможности разрешения головоломки
		for (int i=0; i<14;i++) {									//нам надо проверить каждое число,
			for (int j=i+1;j<15;j++) {								//с каждым числом, что следует за ним
				if (chek[i]>chek[j]) {								//проверяем больше оно или меньше
					chet++;											//каждый раз когда число раньше по порядку больше чем число позже по порядку, мы увеличиваем счетчик
				}
			}
		}
		
		if (!(chet % 2 == 0)) {										//после подсчета мы проверяем это число на четность, если оно четное то все хорошо, комбинация разрешимое

		But15.setText(chek[13]+"");									//если комбинация не разрешимая, то мы меняем 14 и 15 позицию местами,
		But14.setText(chek[14]+"");									//для этого возьмем значения из нашего массива для проверки четности
		}
	}
	
	
	//наш основной метод с которого запускается программа
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		{
				//задаем стиль отображаемого окна
		       JFrame.setDefaultLookAndFeelDecorated(true);
		       
		       //создаем окно в новом потоке
		       javax.swing.SwingUtilities.invokeLater(new Runnable() { //вызываем поток через специальную утилиту swing для окна
		           public void run() {
		               createGUI();
		           }
		       });
		   }
		

		
	}

}